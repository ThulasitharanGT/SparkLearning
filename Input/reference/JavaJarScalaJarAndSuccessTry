import scala.util.{Try, Success, Failure}
import org.apache.spark.sql.DataFrame​
​
​
// net ​
​
def hasColumn(df: DataFrame, path: String) = Try(df(path)).isSuccess​
​
// own ​
​
def colChecker(df:DataFrame,col:String) ={​ // boolean return is commented
val result = Try(df(col))​
result match {​
case Success(result) => println("Success") // true​
case Failure(result) => println("Failure") //false​
case _ =>  println("_") //false​
}​
}​
​
// spark ​
​
df.columns.contains("column-name-to-check")​
​
​
val df=spark.read.format("com.databricks.spark.csv").option("delimiter","\001").option("header","true").option("basePath","s3a://nbcu-backup/data/clean/time_machine/youtube_tv/daily/daily_events/").load("s3a://nbcu-backup/data/clean/time_machine/youtube_tv/daily/daily_events/brand=bravo/filedate=20170405")​
colChecker(df,"ContentId")​
​
​
Try(df("ContentId")).isSuccess // true if present and false if not present​
Try(df("ContentId")).isFailure // true if not present  and false if present​
val colNames=df.columns​
// colNames: Array[String] = Array(Date, TmsId, ContentId, PublishDateTime, Network, CallSign, SeriesTitle, SeasonNumber, ProgramTitle, EpisodeNumber, ContentLength, Platform, DeviceType, ContentType, DmaId, ZipCode, MinutesSinceStart, ViewersStart, ViewersResume, ViewersComplete, ConcurrentViewers, PublishDateTime_original, brand, filedate)​
​
​
​
cd C:\Users\825781\IdeaProjects\spark-gradle-template\build\libs\​
​
\\ specify main calss in gradle.properties. for scala to run ​
​
java -jar spark-gradle-template-1.0-SNAPSHOT-all.jar ​a
scala spark-gradle-template-1.0-SNAPSHOT-all.jar